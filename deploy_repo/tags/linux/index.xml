<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Krishnakumar Chandran</title><link>https://krishna-chandran.github.io/portfolio/tags/linux/</link><description>Recent content in Linux on Krishnakumar Chandran</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 15 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://krishna-chandran.github.io/portfolio/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Lidar Tracking enhancement</title><link>https://krishna-chandran.github.io/portfolio/projects/av-lidar-tracking/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-lidar-tracking/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Development and improved lidar tracking algorithm to handle steady state error in dynamic object states estimation&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to handle steady state error in very large dynamic object states&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Lidar segmentation enhancement</title><link>https://krishna-chandran.github.io/portfolio/projects/av-lidar-segmentation/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-lidar-segmentation/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Development and improved lidar segmentation algorithm to handle very large objects such as airplanes&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to segment airplanes from Lidar point cloud&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Lidar to Thermal Camera extrinsic calibration</title><link>https://krishna-chandran.github.io/portfolio/projects/av-l2t-extrinsic-calibration/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-l2t-extrinsic-calibration/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Estimated Lidar to Thermal camera extrinsic calibration matrix using autoware software&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate Lidar to Thermal camera extrinsic calibration matrix&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>RGB Camera modeling for Fixed wing UAV</title><link>https://krishna-chandran.github.io/portfolio/projects/camera-modelling-fixedwing-uav/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/camera-modelling-fixedwing-uav/</guid><description>&lt;p>&lt;img src="./images/uc-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Equations are derived for camera attached to fixed wing uav and used for body frame to camera frame transformations&lt;/li>
&lt;li>Equations are verified using MATLAB and Simulink simulations&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to model camera attached to fixed wing uav&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/07is1DhGH3o?si=4PpILQxor3LKumux" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe></description></item><item><title>Dynamic object tracking using Deepsort</title><link>https://krishna-chandran.github.io/portfolio/projects/deepsort-dynamic-obstacle-tracker-av/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/deepsort-dynamic-obstacle-tracker-av/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Adapted and enhanced Deepsort algorithm for tracking dynamic objects&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to track moving objects for autonomous vehicle using camera data&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Lidar to Lidar calibration</title><link>https://krishna-chandran.github.io/portfolio/projects/av-l2l-extrinsic-calibration/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-l2l-extrinsic-calibration/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Estimated Lidar to Lidar extrinsic calibration matrix using autoware software&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate Right Lidar to Left Lidar extrinsic calibration matrix&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Lidar to RGB Camera calibration</title><link>https://krishna-chandran.github.io/portfolio/projects/av-l2c-extrinsic-calibration/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-l2c-extrinsic-calibration/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Estimated Lidar to RGB camera extrinsic calibration matrix using autoware software&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate Lidar to RGB camera extrinsic calibration matrix&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Thermal Camera intrinsic calibration</title><link>https://krishna-chandran.github.io/portfolio/projects/av-thermal-camera-intrinsic-calibration/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-thermal-camera-intrinsic-calibration/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Estimated Thermal camera intrinsic calibration parameters using open-cv python library&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate Thermal camera intrinsic calibration parameters&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Flir Thermal Camera ROS grabber</title><link>https://krishna-chandran.github.io/portfolio/projects/av-flir-thermal-camera-grabber/</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-flir-thermal-camera-grabber/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Developed Flir Thermal camera grabber ros node for Perception stack&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to collect thermal data stream from hardware and publish it to rostopics, so that perception stack can used it for detecting thermally sensitive objects&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Deployment of distributed web application in Cloud Administration</title><link>https://krishna-chandran.github.io/portfolio/projects/distributed-app-cloud-deployment/</link><pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/distributed-app-cloud-deployment/</guid><description>&lt;p>&lt;img src="./images/tcs-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Developed Ansible scripts to validate Linux VM capacity and installation prerequisites&lt;/li>
&lt;li>Provisioned Linux VM in Cloud environment using automated scripts&lt;/li>
&lt;li>Performed post-provisioning activities such as IAM, LDAP integration, updating security roles, filesystem creation and Linux patching&lt;/li>
&lt;li>Used Ansible to install prerequistes and infra components in all 12 VMs including JAVA JRE, Postgresql, Hadoop ecosystems and Neo4j database&lt;/li>
&lt;li>Used Ansible to install java application, creation of services, update configurations and installation of Elasticsearch, Logstash and Kibana&lt;/li>
&lt;li>Performed deployment validation checks using Ansible powered tool called Enigma&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to install ignio with High Availability Architecture in distributed cloud environment&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Alert automation and self-healing</title><link>https://krishna-chandran.github.io/portfolio/projects/ignio-alert-automation/</link><pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/ignio-alert-automation/</guid><description>&lt;p>&lt;img src="./images/tcs-logo.png" alt="TCS Logo">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Reduced duplicate alerts by 80%&lt;/li>
&lt;li>Smart handling of alerts by using Probable cause analysis to find the root cause and fix them, ignoring other dependant tasks&lt;/li>
&lt;li>Created adapters to integrate ignio with ServiceNow, Solarwinds and AppDynamics using REST API&lt;/li>
&lt;li>Created dynamic profiling of systems, VMs, Applications, Databases, Network and storage entities&lt;/li>
&lt;li>Using dynamic profiles, predicting if the alert is valid for the given conditions&lt;/li>
&lt;li>Auto verify and apply self-healing scripts to address those alerts&lt;/li>
&lt;li>Automated more than 90% of repeated IT Alert and hence enabling technical team to work on solutioning rather than monitoring and troubleshooting&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to reduce workload of IT Operations and Monitoring team, by reducing duplicate tickets, reduce troubleshooting and automation using AI&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Automation of Linux server provisioning</title><link>https://krishna-chandran.github.io/portfolio/projects/linux-server-provisioning/</link><pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/linux-server-provisioning/</guid><description>&lt;p>&lt;img src="./images/tcs-logo.png" alt="TCS Logo">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Developed automation solution for provisioning linux server in on-perm and cloud data center&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to automate linux server provisioning&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Log monitoring and Dashboard creation using ELK stack</title><link>https://krishna-chandran.github.io/portfolio/projects/log-monitoring-elk/</link><pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/log-monitoring-elk/</guid><description>&lt;p>&lt;img src="./images/tcs-logo.png" alt="TCS Logo">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Developed data pipelines for log data streams using filebeat and metricbeat&lt;/li>
&lt;li>Developed grok filters in logstash for pattern matching and log filtering&lt;/li>
&lt;li>Collected metrics and analytics are displayed in the dashboard created in&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to reduce workload of IT Operations and Monitoring team, by reducing duplicate tickets, reduce troubleshooting and automation using AI&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Estimation of geolocation using Sensor fusion of Camera, GPS and IMU sensor for fixed wing aircraft</title><link>https://krishna-chandran.github.io/portfolio/projects/estimation-geolocation-fixedwing-uav/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/estimation-geolocation-fixedwing-uav/</guid><description>&lt;p>&lt;img src="./images/uc-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Equations are derived for EKF using camera model and dynamics of fixed wing aircraft&lt;/li>
&lt;li>Equations are verified using MATLAB and Simulink simulations&lt;/li>
&lt;li>Estimation algorithm is developed in Python/C++ and simulated in gazebo environment&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate geolocation of fixed wing aircraft&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;iframe width="700" height="500" src="https://www.youtube.com/embed/TCp14nmGwEc?si=0QcBqI4_j26YGXGK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;br>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/oi_eGilhZBA?si=1i6Cv5EMOxOy5NLc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe></description></item><item><title>Estimation of geolocation using Sensor fusion of Camera, GPS and IMU sensor for fixed wing aircraft</title><link>https://krishna-chandran.github.io/portfolio/projects/guidance-model-fiedwing-uav/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/guidance-model-fiedwing-uav/</guid><description>&lt;p>&lt;img src="./images/uc-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Equations are derived for simple yet powerful guidance model using dynamics of fixed wing aircraft&lt;/li>
&lt;li>Guidance model control equations are tested in MATLAB and Simulink environment&lt;/li>
&lt;li>Guidance model is implemented in Python/C++ and ROS and tested in Gazebo Environment&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to build controller using guidance model for fixed wing aircraft&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Estimation of states for autonomous fixed wing aircraft</title><link>https://krishna-chandran.github.io/portfolio/projects/estimation-states-fixedwing-uav/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/estimation-states-fixedwing-uav/</guid><description>&lt;p>&lt;img src="./images/uc-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Equations are derived for EKF using dynamics of fixed wing aircraft&lt;/li>
&lt;li>Equations are verified using MATLAB and Simulink simulations for the scenarios of takeoff, cruise and landing&lt;/li>
&lt;li>Algorithm implemented in Python/C++, ROS and tested in Gazebo environment&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate states of the autonomous fixed wing aircraft&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Estimation of states for autonomous fixed wing aircraft</title><link>https://krishna-chandran.github.io/portfolio/projects/full-stack-web-realtime-cnc-monitoring/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/full-stack-web-realtime-cnc-monitoring/</guid><description>&lt;p>&lt;img src="./images/uc-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Equations are derived for EKF using dynamics of tiltrotor drone&lt;/li>
&lt;li>Equations are verified using MATLAB and Simulink simulations for the scenarios of takeoff, cruise and landing&lt;/li>
&lt;li>Algorithm implemented in Python/C++, ROS and tested in Gazebo environment&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate states of the autonomous fixed wing aircraft&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Graph SLAM for autonomous vehicle localization navigation</title><link>https://krishna-chandran.github.io/portfolio/projects/graphslam-av-navigation/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/graphslam-av-navigation/</guid><description>&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Demonstrated a simple graph based SLAM algorithm (Simultaneous Localization and Mapping)&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to build simultaneous localization and mapping for autonomous cars&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Path manager algorithm for fixed wing aircraft</title><link>https://krishna-chandran.github.io/portfolio/projects/pathmanager-multi-waypoiny-navigation/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/pathmanager-multi-waypoiny-navigation/</guid><description>&lt;p>&lt;img src="./images/uc-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Equations are derived for path manager to track multi waypoint navigation&lt;/li>
&lt;li>Path manager algorithms are tested in MATLAB and Simulink environment&lt;/li>
&lt;li>Path manager is implemented in Python/C++ and ROS and tested in Gazebo Environment&lt;/li>
&lt;li>Algorithm tested in Hardware-in-loop testing&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to build path manager to track multiple waypoints for fixed wing aircraft&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Path tracking algorithm for fixed wing aircraft</title><link>https://krishna-chandran.github.io/portfolio/projects/path-tracking-finxedwing-uav/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/path-tracking-finxedwing-uav/</guid><description>&lt;p>&lt;img src="./images/uc-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Equations are derived for straight line and circular path tracking using dynamics of fixed wing aircraft&lt;/li>
&lt;li>Path tracker control equations are tested in MATLAB and Simulink environment&lt;/li>
&lt;li>Path tracker is implemented in Python/C++ and ROS and tested in Gazebo Environment&lt;/li>
&lt;li>Algorithm tested in Hardware-in-loop testing&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to build straight line and circular orbit path tracker for fixed wing aircraft&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Application Development : Pharmacy Management System</title><link>https://krishna-chandran.github.io/portfolio/projects/app-development-pharmacy-management-system/</link><pubDate>Mon, 15 Sep 2014 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/app-development-pharmacy-management-system/</guid><description>&lt;p>&lt;img src="./images/tcs-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;p>Designed and developed an end-to-end software application for self-managing inventory for a pharmaceutical client.&lt;/p>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item></channel></rss>