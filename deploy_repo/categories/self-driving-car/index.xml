<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Self-Driving Car on Krishnakumar Chandran</title><link>https://krishna-chandran.github.io/portfolio/categories/self-driving-car/</link><description>Recent content in Self-Driving Car on Krishnakumar Chandran</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 15 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://krishna-chandran.github.io/portfolio/categories/self-driving-car/index.xml" rel="self" type="application/rss+xml"/><item><title>Lidar Tracking enhancement</title><link>https://krishna-chandran.github.io/portfolio/projects/av-lidar-tracking/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-lidar-tracking/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Development and improved lidar tracking algorithm to handle steady state error in dynamic object states estimation&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to handle steady state error in very large dynamic object states&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Lidar segmentation enhancement</title><link>https://krishna-chandran.github.io/portfolio/projects/av-lidar-segmentation/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-lidar-segmentation/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Development and improved lidar segmentation algorithm to handle very large objects such as airplanes&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to segment airplanes from Lidar point cloud&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Lidar to Thermal Camera extrinsic calibration</title><link>https://krishna-chandran.github.io/portfolio/projects/av-l2t-extrinsic-calibration/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-l2t-extrinsic-calibration/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Estimated Lidar to Thermal camera extrinsic calibration matrix using autoware software&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate Lidar to Thermal camera extrinsic calibration matrix&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Lidar to Lidar calibration</title><link>https://krishna-chandran.github.io/portfolio/projects/av-l2l-extrinsic-calibration/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-l2l-extrinsic-calibration/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Estimated Lidar to Lidar extrinsic calibration matrix using autoware software&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate Right Lidar to Left Lidar extrinsic calibration matrix&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Lidar to RGB Camera calibration</title><link>https://krishna-chandran.github.io/portfolio/projects/av-l2c-extrinsic-calibration/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/av-l2c-extrinsic-calibration/</guid><description>&lt;p>&lt;img src="./images/thordrive-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Estimated Lidar to RGB camera extrinsic calibration matrix using autoware software&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Aim is to estimate Lidar to RGB camera extrinsic calibration matrix&lt;/li>
&lt;/ul>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3></description></item><item><title>Design and development of autopilot for controlling attitude and air-speed of fixed wing UAV</title><link>https://krishna-chandran.github.io/portfolio/projects/autopilot-fixedwing-uav/</link><pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate><guid>https://krishna-chandran.github.io/portfolio/projects/autopilot-fixedwing-uav/</guid><description>&lt;p>&lt;img src="./images/uc-logo.png" alt="">&lt;/p>
&lt;h3 id="highlights">Highlights &lt;a href="#highlights" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Equation of the motion is derived with 12 DOF, analyzed for stability and PID controllers are constructed for controlling roll, pitch, altitude, course, airspeed with throttle and airspeed with pitch, considering trim conditions. State machine is build for switching between different flying modes. Controller gains are tuned, and code implemented in python/C++ and tested with Gazebo simulation in ROS environment&lt;/li>
&lt;/ul>
&lt;h3 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;p>â€¢ Aim is to get elevator, aileron and throttle commands, for different flight conditions of fixed wing aircraft such as takeoff, climbing, cruise, and landing.&lt;/p>
&lt;h3 id="ideation">Ideation &lt;a href="#ideation" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="solution-methodology">Solution Methodology &lt;a href="#solution-methodology" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;h3 id="results-and-conclusion">Results and Conclusion &lt;a href="#results-and-conclusion" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/7bexe2ZTbrM?si=N3MegxdIMFwZlY9Z" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe></description></item></channel></rss>